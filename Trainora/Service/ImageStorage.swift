////  ImageStorage.swift//  Trainora////  Created by user266021 on 5/3/25.//import UIKitstruct ImageStorage {    static func save(image: UIImage, with name: String) -> Bool {        guard let data = image.jpegData(compressionQuality: 0.8) else { return false }        let url = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)[0]            .appendingPathComponent(name)        do {            try data.write(to: url)            return true        } catch {            print("Error saving image: \(error)")            return false        }    }    static func loadImage(named name: String) -> UIImage {        let url = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)[0]            .appendingPathComponent(name)        if FileManager.default.fileExists(atPath: url.path),           let image = UIImage(contentsOfFile: url.path) {            return image        }        // fallback to asset if available        return UIImage(named: (name as NSString).deletingPathExtension)            ?? UIImage(systemName: "person.crop.circle.fill")!    }}