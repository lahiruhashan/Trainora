////  UserPreferencesProtocol.swift//  Trainora////  Created by user266021 on 5/1/25.//import Foundationprotocol UserPreferencesProtocol {    var lastSelectedLevel: ExperienceLevel { get set }    var selectedTheme: AppTheme { get set }    var selectedLanguage: String { get set }    var notificationsEnabled: Bool { get set }    var reminderTime: Date { get set }}enum AppTheme: String, CaseIterable {    case system, light, dark}final class UserPreferences: UserPreferencesProtocol {    private let defaults = UserDefaults.standard    var lastSelectedLevel: ExperienceLevel {        get {            if let raw = defaults.string(forKey: "lastSelectedLevel"),               let level = ExperienceLevel(rawValue: raw) {                return level            }            return .beginner        }        set {            defaults.set(newValue.rawValue, forKey: "lastSelectedLevel")        }    }    var selectedTheme: AppTheme {        get {            if let raw = defaults.string(forKey: "selectedTheme"),               let theme = AppTheme(rawValue: raw) {                return theme            }            return .system        }        set {            defaults.set(newValue.rawValue, forKey: "selectedTheme")        }    }    var selectedLanguage: String {        get { defaults.string(forKey: "selectedLanguage") ?? "English" }        set { defaults.set(newValue, forKey: "selectedLanguage") }    }    var notificationsEnabled: Bool {        get { defaults.bool(forKey: "notificationsEnabled") }        set { defaults.set(newValue, forKey: "notificationsEnabled") }    }    var reminderTime: Date {        get { defaults.object(forKey: "reminderTime") as? Date ?? Date() }        set { defaults.set(newValue, forKey: "reminderTime") }    }}