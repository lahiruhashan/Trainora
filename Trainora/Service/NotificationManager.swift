////  NotificationManager.swift//  Trainora////  Created by user266021 on 5/4/25.//import Foundationimport UserNotificationsfinal class NotificationManager {    static let shared = NotificationManager()    private init() {}    func requestAuthorization() {        UNUserNotificationCenter.current().requestAuthorization(options: [            .alert, .sound,        ]) { granted, error in            if let error = error {                print(                    "Notification permission error: \(error.localizedDescription)"                )            } else {                print("Notification permission granted: \(granted)")            }        }    }    func scheduleDailyReminder(at time: Date) {        let content = UNMutableNotificationContent()        content.title = "Trainora Reminder"        content.body = "Time to get moving! Check your workout planner ðŸ’ª"        content.sound = .default        let calendar = Calendar.current        let triggerDate = calendar.dateComponents([.hour, .minute], from: time)        let trigger = UNCalendarNotificationTrigger(            dateMatching: triggerDate,            repeats: true        )        let request = UNNotificationRequest(            identifier: "daily_reminder",            content: content,            trigger: trigger        )        UNUserNotificationCenter.current().add(request) { error in            if let error = error {                print(                    "Failed to schedule reminder: \(error.localizedDescription)"                )            }        }    }    func cancelReminder() {        UNUserNotificationCenter.current().removePendingNotificationRequests(            withIdentifiers: ["daily_reminder"])    }    func updateReminder(enabled: Bool, time: Date) {        if enabled {            scheduleDailyReminder(at: time)        } else {            cancelReminder()        }    }}