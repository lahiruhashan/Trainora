////  SettingsView.swift//  Trainora////  Created by user266021 on 5/4/25.//import SwiftUIstruct SettingsView: View {    @State private var isDarkMode = false    @State private var notificationsEnabled = true    @State private var selectedReminderTime = Date()    @State private var soundEnabled = true    @State private var selectedLanguage = "English"    @State private var selectedUnit = "Metric"        private let languages = ["English"] // More can be added later    private let units = ["Metric", "Imperial"]    var body: some View {        Form {            Section(header: Text("Appearance")) {                Toggle(isOn: $isDarkMode) {                    Label("Dark Mode", systemImage: "moon.fill")                }                .onChange(of: isDarkMode) { value in                    UserDefaults.standard.set(value, forKey: "isDarkMode")                }            }            Section(header: Text("Account")) {                NavigationLink(destination: ChangePasswordView()) {                    Label("Change Password", systemImage: "lock.rotation")                }            }            Section(header: Text("General")) {                Picker("Language", selection: $selectedLanguage) {                    ForEach(languages, id: \.self) {                        Text($0)                    }                }                .onChange(of: selectedLanguage) { newValue in                    UserDefaults.standard.set(newValue, forKey: "selectedLanguage")                }                Picker("Units", selection: $selectedUnit) {                    ForEach(units, id: \.self) {                        Text($0)                    }                }                .onChange(of: selectedUnit) { newValue in                    UserDefaults.standard.set(newValue, forKey: "selectedUnit")                }                Toggle(isOn: $notificationsEnabled) {                    Label("Enable Notifications", systemImage: "bell.fill")                }                .onChange(of: notificationsEnabled) { value in                    UserDefaults.standard.set(value, forKey: "notificationsEnabled")                }                Toggle(isOn: $soundEnabled) {                    Label("Sound & Vibration", systemImage: "speaker.wave.2.fill")                }                .onChange(of: soundEnabled) { value in                    UserDefaults.standard.set(value, forKey: "soundEnabled")                }                DatePicker("Workout Reminder", selection: $selectedReminderTime, displayedComponents: .hourAndMinute)                    .onChange(of: selectedReminderTime) { value in                        UserDefaults.standard.set(value, forKey: "reminderTime")                    }            }        }        .navigationTitle("Settings")        .onAppear {            loadSettings()        }    }    private func loadSettings() {        isDarkMode = UserDefaults.standard.bool(forKey: "isDarkMode")        notificationsEnabled = UserDefaults.standard.bool(forKey: "notificationsEnabled")        selectedLanguage = UserDefaults.standard.string(forKey: "selectedLanguage") ?? "English"        selectedUnit = UserDefaults.standard.string(forKey: "selectedUnit") ?? "Metric"        soundEnabled = UserDefaults.standard.bool(forKey: "soundEnabled")        selectedReminderTime = UserDefaults.standard.object(forKey: "reminderTime") as? Date ?? Date()    }}