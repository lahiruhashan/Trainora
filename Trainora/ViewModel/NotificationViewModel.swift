////  NotificationViewModel.swift//  Trainora////  Created by user266021 on 5/7/25.//import Combineimport Foundationfinal class NotificationViewModel: ObservableObject {    @Published var notifications: [NotificationModel] = []    private var subs = Set<AnyCancellable>()    init() {        let repo = NotificationRepository.shared        notifications = repo.notifications        repo.publisher            .receive(on: DispatchQueue.main)            .assign(to: \.notifications, on: self)            .store(in: &subs)    }    func markAsSeen(_ n: NotificationModel) {        NotificationRepository.shared.markAsSeen(n)    }    func clearAll() {        NotificationRepository.shared.clearAll()    }}