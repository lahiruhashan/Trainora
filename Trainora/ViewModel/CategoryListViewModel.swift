////  CategoryListViewModel.swift//  Trainora////  Created by user266021 on 5/1/2import Foundationimport Combinefinal class CategoryListViewModel: ObservableObject {    @Published var categories: [ExerciseCategory] = []    @Published var selectedLevel: ExperienceLevel    var service: ExerciseLibraryServiceProtocol    var cancellables = Set<AnyCancellable>()    init(service: ExerciseLibraryServiceProtocol) {        self.service = service        self.selectedLevel = service.currentLevel        loadCategories()    }    func loadCategories() {        service.fetchCategoryDTOs()            .receive(on: DispatchQueue.main)            .sink { [weak self] categories in                self?.categories = categories            }.store(in: &cancellables)    }    func selectLevel(_ level: ExperienceLevel) {        selectedLevel = level        service.currentLevel = level        loadCategories()    }    func toggleFavoriteCategory(id: UUID) {        service.toggleFavoriteCategory(id: id)        loadCategories()    }}