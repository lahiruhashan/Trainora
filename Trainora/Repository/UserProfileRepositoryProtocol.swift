////  UserProfileRepositoryProtocol.swift//  Trainora////  Created by user266021 on 5/3/25.//import Combineprotocol UserProfileRepositoryProtocol {    func fetchUserProfile(email: String, password: String) -> AnyPublisher<        UserProfile?, Never    >    func fetchUserProfileByEmail(email: String) -> AnyPublisher<        UserProfile?, Never    >    func saveProfile(_ profile: UserProfile)    func updatePassword(        for email: String,        oldPassword: String,        newPassword: String,        completion: @escaping (Bool) -> Void    )}final class UserProfileRepository: UserProfileRepositoryProtocol {    private let dataSource: UserProfileDataSourceProtocol    init(dataSource: UserProfileDataSourceProtocol) {        self.dataSource = dataSource    }    func fetchUserProfile(email: String, password: String) -> AnyPublisher<        UserProfile?, Never    > {        dataSource.getProfile(email: email, password: password)    }    func fetchUserProfileByEmail(email: String) -> AnyPublisher<        UserProfile?, Never    > {        dataSource.getProfilebyEmail(email: email)    }    func saveProfile(_ profile: UserProfile) {        dataSource.saveProfile(profile)    }    func updatePassword(        for email: String,        oldPassword: String,        newPassword: String,        completion: @escaping (Bool) -> Void    ) {        dataSource.updatePassword(            email: email,            oldPassword: oldPassword,            newPassword: newPassword,            completion: completion        )    }}