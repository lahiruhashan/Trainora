////  ExerciseListView.swift//  Trainora////  Created by user266021 on 5/1/25.//// ExerciseListView.swiftimport SwiftUIstruct ExerciseListView: View {    let categoryId: UUID    let service: ExerciseLibraryServiceProtocol    @StateObject private var viewModel: ExerciseListViewModel    @State private var searchText: String = ""    @State private var selectedExercise: Exercise? = nil    init(categoryId: UUID, service: ExerciseLibraryServiceProtocol) {        self.categoryId = categoryId        self.service = service        _viewModel = StateObject(wrappedValue: ExerciseListViewModel(service: service, categoryId: categoryId))    }    var body: some View {        List {            ForEach(viewModel.exercises.filter { searchText.isEmpty || $0.title.localizedCaseInsensitiveContains(searchText) }) { exercise in                Button {                    selectedExercise = exercise                } label: {                    ExerciseLibraryCardView(                        exercise: exercise,                        onFavoriteTapped: {                            viewModel.toggleFavoriteExercise(id: exercise.id)                        }                    )                }                .buttonStyle(.plain)            }        }        .listStyle(.plain)        .searchable(text: $searchText, placement: .navigationBarDrawer(displayMode: .always))        .navigationTitle("Exercises")        .sheet(item: $selectedExercise) { exercise in            ExerciseDetailPopupView(viewModel: ExerciseDetailViewModel(exercise: exercise))        }    }}