////  EditProfileView.swift//  Trainora////  Created by user266021 on 5/3/25.//import SwiftUIstruct EditProfileView: View {    @ObservedObject var viewModel: UserProfileViewModel    @Environment(\.presentationMode) var presentationMode    var body: some View {        ScrollView {            VStack(spacing: 20) {                // Profile image                Image(uiImage: UIImage(named: (viewModel.profile.profileImageName as NSString).deletingPathExtension)                             ?? UIImage(systemName: "person.crop.circle.fill")!)                    .resizable()                    .aspectRatio(contentMode: .fill)                    .frame(width: 120, height: 120)                    .clipShape(Circle())                    .overlay(Circle().stroke(Color.white, lineWidth: 2))                    .shadow(radius: 4)                    .padding(.top)                LabeledTextField(title: "Full Name", text: $viewModel.profile.fullName)                LabeledTextField(title: "Email", text: $viewModel.profile.email)                LabeledTextField(title: "Mobile Number", text: $viewModel.profile.mobileNumber)                LabeledPicker(title: "Gender", selection: $viewModel.profile.gender, options: Gender.allCases)                LabeledTextField(title: "Password", text: $viewModel.profile.password, isSecure: true)                LabeledDateField(title: "Date of Birth", date: $viewModel.profile.dateOfBirth)                LabeledTextField(title: "Age", text: .constant("\(viewModel.age)"))                LabeledTextField(title: "Weight (Kg)", text: Binding(                    get: { String(viewModel.profile.weight) },                    set: { viewModel.profile.weight = Double($0) ?? 0 }                ))                LabeledTextField(title: "Height (CM)", text: Binding(                    get: { String(viewModel.profile.height) },                    set: { viewModel.profile.height = Double($0) ?? 0 }                ))                LabeledSegmentedPicker(                    title: "Experience Level",                    selection: $viewModel.profile.experience,                    options: ExperienceLevel.allCases                )                Button(action: {                    viewModel.save()                    presentationMode.wrappedValue.dismiss()                }) {                    Text("Save Profile")                        .fontWeight(.bold)                        .padding()                        .frame(maxWidth: .infinity)                        .background(Color.green)                        .foregroundColor(.white)                        .cornerRadius(12)                }                .padding(.horizontal)                Spacer()            }        }        .navigationTitle("Edit Profile")        .padding(.bottom)    }}