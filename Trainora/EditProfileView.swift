////  EditProfileView.swift//  Trainora////  Created by user266021 on 5/3/25.//import SwiftUIstruct EditProfileView: View {    @ObservedObject var viewModel: UserProfileViewModel    @Environment(\.presentationMode) var presentationMode    @State private var showImagePicker = false    @State private var selectedUIImage: UIImage?    @State private var draftProfile: UserProfile = .empty    var body: some View {        ScrollView {            VStack(spacing: 20) {                // Profile Image                ZStack(alignment: .bottomTrailing) {                    Image(                        uiImage: selectedUIImage                            ?? ImageStorage.loadImage(                                named: draftProfile.profileImageName                            )                    )                    .resizable()                    .aspectRatio(contentMode: .fill)                    .frame(width: 120, height: 120)                    .clipShape(Circle())                    .overlay(Circle().stroke(Color.white, lineWidth: 2))                    .shadow(radius: 4)                    .onTapGesture {                        showImagePicker = true                    }                    Image(systemName: "pencil.circle.fill")                        .font(.title)                        .foregroundColor(.blue)                        .background(Circle().fill(Color.white))                        .offset(x: -5, y: -5)                }                // Input Fields - BIND TO `draftProfile` not viewModel.profile                LabeledTextField(                    title: "First Name",                    text: $draftProfile.firstName                )                LabeledTextField(                    title: "Last Name",                    text: $draftProfile.lastName                )                LabeledTextField(title: "Email", text: $draftProfile.email)                LabeledTextField(                    title: "Mobile Number",                    text: $draftProfile.mobileNumber                )                LabeledPicker(                    title: "Gender",                    selection: $draftProfile.gender,                    options: Gender.allCases                )                LabeledDateField(                    title: "Date of Birth",                    date: $draftProfile.dateOfBirth                )                LabeledTextField(                    title: "Age",                    text: .constant(                        "\(calculateAge(from: draftProfile.dateOfBirth))"                    )                )                LabeledTextField(                    title: "Weight (Kg)",                    text: Binding(                        get: { String(draftProfile.weight) },                        set: { draftProfile.weight = Double($0) ?? 0 }                    )                )                LabeledTextField(                    title: "Height (CM)",                    text: Binding(                        get: { String(draftProfile.height) },                        set: { draftProfile.height = Double($0) ?? 0 }                    )                )                LabeledSegmentedPicker(                    title: "Experience Level",                    selection: $draftProfile.experience,                    options: ExperienceLevel.allCases                )                Button(action: {                    if let image = selectedUIImage {                        if let savedName = viewModel.saveProfileImage(image) {                            draftProfile.profileImageName = savedName                        }                    }                    draftProfile.age = calculateAge(                        from: draftProfile.dateOfBirth                    )                    viewModel.profile = draftProfile                    viewModel.save()                    presentationMode.wrappedValue.dismiss()                }) {                    Text("Save Profile")                        .fontWeight(.bold)                        .padding()                        .frame(maxWidth: .infinity)                        .background(Color.green)                        .foregroundColor(.white)                        .cornerRadius(12)                }                .padding(.horizontal)                Spacer()            }        }        .navigationTitle("Edit Profile")        .padding(.bottom)        .sheet(isPresented: $showImagePicker) {            ImagePicker { image in                selectedUIImage = image            }        }        .onAppear {            self.draftProfile = viewModel.profile            self.selectedUIImage = nil        }    }    private func calculateAge(from date: Date) -> Int {        Calendar.current.dateComponents([.year], from: date, to: Date()).year            ?? 0    }}