////  ExerciseDetailViewModelTests.swift//  Trainora////  Created by user266021 on 5/7/25.//import XCTest@testable import Trainorafinal class ExerciseDetailViewModelTests: XCTestCase {    private var sampleExercise: Exercise!    private var viewModel: ExerciseDetailViewModel!    override func setUp() {        super.setUp()        // Create a sample Exercise        sampleExercise = Exercise(            id: UUID(uuidString: "11111111-2222-3333-4444-555555555555")!,            title: "Test Exercise",            description: "A test description",            duration: 15.5,            calories: 123.0,            reps: 10,            videoURL: URL(string: "https://example.com/video.mp4"),            imageName: "test_image",            isFavorite: false,            categoryId: UUID(                uuidString: "99999999-8888-7777-6666-555555555555"            )!        )        viewModel = ExerciseDetailViewModel(exercise: sampleExercise)    }    override func tearDown() {        viewModel = nil        sampleExercise = nil        super.tearDown()    }    func test_exerciseIsAssignedCorrectly() {        XCTAssertEqual(viewModel.exercise.id, sampleExercise.id)        XCTAssertEqual(viewModel.exercise.title, sampleExercise.title)        XCTAssertEqual(            viewModel.exercise.description,            sampleExercise.description        )        XCTAssertEqual(viewModel.exercise.duration, sampleExercise.duration)        XCTAssertEqual(viewModel.exercise.calories, sampleExercise.calories)        XCTAssertEqual(viewModel.exercise.reps, sampleExercise.reps)        XCTAssertEqual(viewModel.exercise.videoURL, sampleExercise.videoURL)        XCTAssertEqual(viewModel.exercise.imageName, sampleExercise.imageName)        XCTAssertEqual(viewModel.exercise.isFavorite, sampleExercise.isFavorite)        XCTAssertEqual(viewModel.exercise.categoryId, sampleExercise.categoryId)    }    func test_formattedDuration() {        // Expect "Duration: 15.5 min"        XCTAssertEqual(viewModel.formattedDuration, "Duration: 15.5 min")    }    func test_formattedCalories() {        // Expect "Calories: 123.0 kcal"        XCTAssertEqual(viewModel.formattedCalories, "Calories: 123.0 kcal")    }    func test_formattedReps() {        // Expect "Reps: 10"        XCTAssertEqual(viewModel.formattedReps, "Reps: 10")    }}